/*******************************************************************************
 * AntennaComponent_TA generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib Â© 2009-2015 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class AntennaComponent_TA extends SimpleSpringComponent_TA
    native
    editinlinenew;

/** Bone or socket on antenna to attach topper to */
var() name TopperSocket;
/** Mesh to use as the bendable antenna */
var() SkeletalMesh AntennaMesh;
/** Override topper mesh material */
var() MaterialInterface AntennaMaterial;
/** Antenna anim tree (for skeletal controllers) */
var() AnimTree AnimTreeTemplate;
/** Name of skeletal controllers for bending the antenna */
var() array<name> BendyBoneControllers;
/** Overall scaler for how much each bone in the antenna can rotate */
var() float BendScale;
var private transient MaterialInstanceConstant TopperMaterial;
var private transient float LastTopperWindSpeedParamValue;
var export editinline transient SkeletalMeshComponent_TA AntennaSK;
var transient array<SkelControlSingleBone> BendyControls;

function InitAntenna(SkeletalMeshComponent_TA AttachToMesh)
{
   
}

function SetTopperMaterial(MaterialInstanceConstant InTopperMaterial)
{
    
}

// Export UAntennaComponent_TA::execUpdateSpring(FFrame&, void* const)
native function UpdateSpring(float DeltaTime, const out Vector BaseLocation, const out Rotator BaseRotation)
{
  
}