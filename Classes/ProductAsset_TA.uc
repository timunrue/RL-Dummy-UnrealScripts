/*******************************************************************************
 * ProductAsset_TA generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib Â© 2009-2015 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class ProductAsset_TA extends Object
    abstract
    native
    editinlinenew;

struct native ProductReplacement
{
    //var() array<Engine.WorldInfo.EConsoleType> Platforms;
    var() ProductAsset_TA Replacement;
 
};

/** Make sure we don't link up a product with an asset it doesn't support */
var() editconst ProductSlot_TA Slot;
/** Stat to track */
var() class<ProductStat_TA> StatClass;
/** The method to which this product can be unlocked */
var() _Types_TA.EUnlockMethod UnlockMethod;
/** Don't allow this product to be equipped unless this product is selected in the loadout already TODO Should this be editor only so we don't load bodies when being given a skin? */
var() ProductAsset_TA RequiredProduct;
/** Replace this product depending on the platform */
var() editoronly ProductReplacement PlatformReplacement;
/** Texture to use for UI */

//var(Thumbnail) duplicatetransient const Texture2D Thumbnail;
//var(Thumbnail) editoronly ThumbnailRenderer_TA ThumbnailRenderer;
/** Offset for camera in thumbnail scene - X forward, Y right, Z up */
//var(Thumbnail) editoronly Vector ThumbnailCameraTranslationOffset<RebuildThumbnail=>;
/** Offset for camera rotation in thumbnail scene */
//var(Thumbnail) editoronly Rotator ThumbnailCameraRotationOffset<RebuildThumbnail=>;
/** Offset for product rotation in thumbnail scene */
//var(Thumbnail) editoronly Rotator ThumbnailProductRotation<RebuildThumbnail=>;
/** Check to force the thumbnail to rebuild */
//var(Thumbnail) editoronly const bool bForceRebuildThumbnail<RebuildThumbnail=>;
var() duplicatetransient editoronly bool bDebug;
/** Ready for public use? */
var() duplicatetransient editoronly bool bPublic;
/** If false, force INT name for this product */
var() editoronly bool bLocalized;
/** This product should be loaded on dedicated servers (when loading loadout) */
var() bool bDedicatedServerRelevant;

// Export UProductAsset_TA::execGetID(FFrame&, void* const)
native final function int GetID();

// Export UProductAsset_TA::execGetLabel(FFrame&, void* const)
native final function string GetLabel();

// Export UProductAsset_TA::execStaticGetLabel(FFrame&, void* const)
native static final function string StaticGetLabel(name ProductName)
{
    //native.ProductName;        
}

event string CheckCanSave()
{

}

event ModifyThumbnailScene(ThumbnailScene_TA Scene)
{
    //return;    
}